#user www;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 100;
    # multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 80;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format compression '$remote_addr - $remote_user [$time_local] '
         '"$request" $status $upstream_addr '
         '"$http_referer" "$http_user_agent"';

    server {
        listen 4200;
        access_log /var/log/nginx/access.log compression;
        root /var/www;
        index index.html index.htm;
        location / {
            if (!-e $request_filename) {
                rewrite ^(.*)$ /index.html break;
            }
        }
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires 1M;
            access_log off;
            add_header 'Cache-Control' 'public';
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
        }
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }

    server {
        server_name antipatrola.ml;
        access_log /var/log/nginx/access.log compression;
        root /var/www;
        index index.html index.htm;
        
        location / {
            proxy_pass http://127.0.0.1:4200;
        }

        listen [::]:443 ssl ipv6only=on;
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/antipatrola/certificate.crt;
        ssl_certificate_key /etc/letsencrypt/live/antipatrola/private.key;
        ssl_dhparam /etc/letsencrypt/dhparams.pem;
    }

    server {
        if ($host = antipatrola.ml) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        listen 80 default_server;
        listen [::]:80 default_server;
        server_name antipatrola.ml;

        location / {
            proxy_pass http://127.0.0.1:4200;
        }
    }
}